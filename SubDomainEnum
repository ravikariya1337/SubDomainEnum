#!/bin/bash

# Check if the user provided the required arguments
if [ "$#" -lt 2 ] || [ "$1" != "-f" ]; then
    echo "Usage: $(basename $0) -f <path_to_file> [-not_in_scope <path_to_not_in_scope_file>] --subdomain-wordlist <path_to_amass_wordlist>"
    exit 1
fi

# Parse the arguments
while [ "$#" -gt 0 ]; do
    case $1 in
        -f) Filename="$2"; shift ;;
        -not_in_scope) NotargetFile="$2"; shift ;;
        --subdomain-wordlist) SUBDOMAIN_WORDLIST="$2"; shift ;;
        *) echo "Unknown parameter passed: $1"; exit 1 ;;
    esac
    shift
done

if [ -z "$Filename" ] || [ -z "$SUBDOMAIN_WORDLIST" ]; then
    echo "Error: One or more required arguments are missing."
    echo "Usage: $(basename $0) -f <path_to_file> [--not_in_scope <path_to_not_in_scope_file>] --subdomain-wordlist <path_to_subdomain_wordlist>"
    exit 1
fi

echo "Running subdomain enumeration..." | notify -silent
#while read line; do amass enum -d $line -w $SUBDOMAIN_WORDLIST -o amass1.txt; done < $Filename
#while read line; do amass enum -d $line -o amass2.txt; done < $Filename &
while read line; do assetfinder --subs-only $line | tee -a assetfinder.txt; done < $Filename &
while read line; do subfinder -v -d $line -o subfinder.txt; done < $Filename
wait
cat assetfinder.txt subfinder.txt | sort -u | tee -a All_Subdomains_temp.txt

# Check if notarget file is provided
if [ -n "$NotargetFile" ] && [ -f "$NotargetFile" ]; then
    echo "Removing out-of-scope domains from the All_Subdomains.txt file..."
    grep -v -f "$NotargetFile" All_Subdomains_temp.txt > All_Subdomains.txt
else
    echo "No notarget file provided, skipping out-of-scope domain removal..."
    mv All_Subdomains_temp.txt All_Subdomains.txt
fi
rm All_Subdomains_temp.txt
echo "Scanning live web servers with httpx..." | notify -silent
cat All_Subdomains.txt | httpx -ss -o httpx.txt &
cat All_Subdomains.txt | httpx -sc -td -title -cdn -location -server -o httpx2.txt 
wait
cat httpx.txt | gau --blacklist css,jpg,jpeg,png,svg,ico --verbose --o gau.txt &
katana -list httpx.txt -jc -jsl -aff -ef css,jpg,jpeg,png,svg,ico -verbose -o katana.txt
wait
cat gau.txt katana.txt | sort -u | httpx -mc 200,403,401 -o LiveUrls.txt
echo "Recon is Done" | notify -silent
