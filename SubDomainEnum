#!/bin/bash

# Check if the user provided the required arguments
if [ "$#" -lt 2 ] || [ "$1" != "-f" ]; then
    echo "Usage: $(basename $0) -f <path_to_file> [-not_in_scope <path_to_not_in_scope_file>] --subdomain-wordlist <path_to_amass_wordlist> --nuclei-templates <path_to_nuclei_templates> --ffuf-wordlist <path_to_wordlist_directories>"
    exit 1
fi

# Parse the arguments
while [ "$#" -gt 0 ]; do
    case $1 in
        -f) Filename="$2"; shift ;;
        -not_in_scope) NotargetFile="$2"; shift ;;
        --subdomain-wordlist) SUBDOMAIN_WORDLIST="$2"; shift ;;
        --nuclei-templates) NUCLEI_TEMPLATES="$2"; shift ;;
        --ffuf-wordlist) FFUF_WORDLIST="$2"; shift ;
        *) echo "Unknown parameter passed: $1"; exit 1 ;;
    esac
    shift
done

if [ -z "$Filename" ] || [ -z "$SUBDOMAIN_WORDLIST" ] || [ -z "$NUCLEI_TEMPLATES" ] || [ -z "$FFUF_WORDLIST" ]; then
    echo "Error: One or more required arguments are missing."
    echo "Usage: $(basename $0) -f <path_to_file> [--not_in_scope <path_to_not_in_scope_file>] --subdomain-wordlist <path_to_subdomain_wordlist> --nuclei-templates <path_to_nuclei_templates> --ffuf-wordlist <path_to_ffuf_wordlist>"
    exit 1
fi

mkdir aquatone
mkdir ffuf
echo "Running subdomain enumeration..." | notify -silent
while read line; do amass enum -d $line -w $SUBDOMAIN_WORDLIST -o amass1.txt; done < $Filename
while read line; do amass enum -d $line -o amass2.txt; done < $Filename &
while read line; do assetfinder --subs-only $line | tee -a assetfinder.txt; done < $Filename &
while read line; do subfinder -v -d $line -o subfinder.txt; done < $Filename
wait
cat amass1.txt amass2.txt assetfinder.txt subfinder.txt | sort -u | tee -a All_Subdomains_temp.txt

# Check if notarget file is provided
if [ -n "$NotargetFile" ] && [ -f "$NotargetFile" ]; then
    echo "Removing out-of-scope domains from the All_Subdomains.txt file..."
    grep -v -f "$NotargetFile" All_Subdomains_temp.txt > All_Subdomains.txt
else
    echo "No notarget file provided, skipping out-of-scope domain removal..."
    mv All_Subdomains_temp.txt All_Subdomains.txt
fi
rm All_Subdomains_temp.txt
echo "Scanning live web servers with httpx..." | notify -silent
cat All_Subdomains.txt | httpx -p 80,81,300,443,591,593,832,981,1010,1311,2082,2087,2095,2096,2480,3000,3128,3333,4243,4567,4711,4712,4993,5000,5104,5108,5800,6543,7000,7396,7474,8000,8001,8008,8014,8042,8069,8080,8081,8088,8090,8091,8118,8123,8172,8222,8243,8280,8281,8333,8443,8500,8834,8880,8888,8983,9000,9043,9060,9080,9090,9091,9200,9443,9800,9981,12443,16080,18091,18092,20720,28017 -o httpx_detailed.txt
cat All_Subdomains.txt | httpx -p 80,81,300,443,591,593,832,981,1010,1311,2082,2087,2095,2096,2480,3000,3128,3333,4243,4567,4711,4712,4993,5000,5104,5108,5800,6543,7000,7396,7474,8000,8001,8008,8014,8042,8069,8080,8081,8088,8090,8091,8118,8123,8172,8222,8243,8280,8281,8333,8443,8500,8834,8880,8888,8983,9000,9043,9060,9080,9090,9091,9200,9443,9800,9981,12443,16080,18091,18092,20720,28017 -sc -td -server -title -location -o httpx2_detailed.txt &
nuclei -t $NUCLEI_TEMPLATES -l httpx.txt -o nuclei.txt & 
cat httpx.txt | for i in $(cat httpx.txt); do DOMAIN=$(echo $i | unfurl format %d); ffuf -u $i/FUZZ -w $FFUF_WORDLIST -fc 404 -recursion -r -ac -rate 10 -of md -o ffuf/${DOMAIN}_ffuf.md; done &
cat httpx.txt | aquatone -ports xlarge -out aquatone/ &
cat httpx.txt | gau --subs --verbose --blacklist png,jpg,gif,jpeg,swf,woff,svg,css --o gau.txt &
katana -list httpx.txt -jc -kf -aff -ef png,jpg,gif,jpeg,swf,woff,svg,css -o katana.txt
wait
for i in ffuf/*.md; do pandoc "$i" -o "${i%.md}.html"; done &
cat gau.txt katana.txt | sort -u | tee -a allUrls.txt | httpx -mc 200,403 -o LiveUrls.txt
#cat LiveUrls.txt | uro | tee -a LiveUrls_uro.txt
nuclei -t $NUCLEI_TEMPLATES -l LiveUrls.txt -es info -o nucleiAll.txt &
echo "Recon is Done" | notify -silent
